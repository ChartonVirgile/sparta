# advect particles on uniform Cartesian grid
# single-step moves that cross grid cell boundaries are detected
# particle effectively moves from cell to cell
# particles reflect off global box boundaries

seed	    	    872387
dimension   	    3
variable            Pi equal 3.14159
variable            h equal 0.0005
variable            k equal 2.777777778e-05
variable            l equal 0.0001944444444


variable            xlo equal -0.001361111
variable            xhi equal 0.001361111
variable            ylo equal -0.0005305556
variable            yhi equal 0.0005
variable            zlo equal -0.0009722222
variable            zhi equal 0.0009722222

variable            lx equal ${xhi}-${xlo}
variable            ly equal ${yhi}-${ylo}
variable            lz equal ${zhi}-${zlo}

variable            blx equal ${lx}/2. 
variable            bly equal ${ly}/2. 
variable            blz equal ${lz}/2.

print " blz ${blz}"
variable            nden equal 4.82354E24*1.08
variable            ppc equal 30
variable            xcells equal round(1982*1.08)
variable            ycells equal round(722*1.08)
variable            zcells equal round(1360*1.08)
#Upper wall is moving at twice the speed
variable            vwall equal 92.37*5.0
variable            vwall2 equal 92.37*2.*5.

print               " domain length ${lx} , ${ly} , ${lz}" 
variable            cellx equal ${lx}/${xcells}
variable            celly equal ${ly}/${ycells}
variable            cellz equal ${lz}/${zcells}
print               " dx dy dz ${cellx} ${celly} ${cellz}" 

variable            Fnum equal ${nden}*${lx}*${ly}*${lz}/(${xcells}*${ycells}*${zcells})/${ppc}
print               "Fnum = ${Fnum}" 

timestep 	    4.56E-11
global              nrho ${nden}
global              surfs explicit/distributed

global              fnum ${Fnum}
global              gridcut 3.0e-6
#global              cellmax 30000
#global 		    surfmax 10000
#global              splitmax 10000

boundary	    p s p 

surf_collide        positive diffuse 273.15 1.0 translate ${vwall2} 0.0 0.0
surf_collide        negative diffuse 273.15 1.0 
bound_modify        yhi collide positive
bound_modify        ylo collide negative 
create_box  	    -0.001361111 0.001361111 -0.0005305556 0.0005 -0.0009722222 0.0009722222 
create_grid 	    ${xcells} ${ycells} ${zcells} block * * * 

read_surf           eggcarton_medium.surf group 1
#read_surf           eggcarton_medium.surf group 1 clip 1.E-12

surf_collide        1 diffuse 273.15 1.0
surf_modify         1 collide 1
write_surf          eggcarton_distributedsurf
species		    ar.species Ar
mixture		    air Ar vstream ${vwall} ${vwall} 0.0 temp 273.15

collide		    vss air ar.hs
collide_modify      vremax 10000 no 
collide_modify      nearcp yes 30


variable x internal 1
variable y internal 1
variable z internal 1

#variable vx equal "(v_y>-v_bly)*(v_vwall*(v_y/v_h+1)+0.40*2*v_vwall*sin(4*v_x/v_ly)*sin(5*PI*(2*v_y/v_ly-1))*sin(2*v_z/v_ly))"
#variable vy equal "(v_y>-v_bly)*(0.40*2*v_vwall*sin(4*v_x/v_ly)*sin(5*PI*(2*v_y/v_ly-1))*sin(2*v_z/v_ly))"
#variable vz equal "(v_y>-v_bly)*(0.40*2*v_vwall*sin(4*v_x/v_ly)*sin(5*PI*(2*v_y/v_ly-1))*sin(2*v_z/v_ly))"


variable vx equal "(v_y>-v_bly)*v_vwall*(v_y/v_h+1)"
variable vy equal "0.0"
variable vz equal "0.0"

#create_particles    air n 0 velocity vx vy vz x y z
#create_particles    air n 0 velocity vx vy vz x y z

#compute             5 thermal/grid all all temp
#fix                 5 ave/grid all 1 1000 1000 c_5[*] ave one

compute             cgrid1 grid all all nrho u v w
fix                 fgrid1 ave/grid all 10 1000 10000 c_cgrid1[*] ave running
dump                dgrid1 grid all 10000 tmp_grid.* id f_fgrid1[*]

#compute             9 pflux/grid all all momxx momyy momzz momxy momyz momxz
#fix                 9 ave/grid all 1 100 100 c_9[*] ave one
#compute             8 eflux/grid all all heatx heaty heatz
#fix                 8 ave/grid all 1 100 100 c_8[*] ave one
#dump                8 grid all 100 tmp_eflux.* id f_8[*]
#dump                9 grid all 100 tmp_pflux.* id f_9[*]
#dump                10 grid all 100 tmp_volume.* id vol

compute             11 boundary all press shx shy shz etot
fix                 11 ave/time 1 1000 1000 c_11[*] ave one mode vector file tmp_boundary.dat

compute             12 surf all all fx fy fz etot 
fix                 12 ave/surf all 1 100 100 c_12[*] ave running
fix                 13 ave/surf all 1 10000 10000 c_12[*] ave running
dump                13 surf all 10000 tmp_surf.* id f_13[*]

#restart             250000 restart.%.* fileper 2048

compute             1s grid all all nrho u v w
fix                 1s ave/grid all 10 10 100 c_1s[*] ave one

variable            musq grid 0.5*f_1s[2]*f_1s[2]*f_1s[1]
variable            mvsq grid 0.5*f_1s[3]*f_1s[3]*f_1s[1]
variable            mwsq grid 0.5*f_1s[4]*f_1s[4]*f_1s[1]
#variable            usq grid f_1s[2]*f_1s[2]
#variable            vsq grid f_1s[3]*f_1s[3]
#variable            wsq grid f_1s[4]*f_1s[4]

#compute eu reduce ave v_usq
#compute ev reduce ave v_vs
#compute ew reduce ave v_wsq

compute meu reduce ave v_musq
compute mev reduce ave v_mvsq
compute mew reduce ave v_mwsq
compute fsum reduce sum f_12[1] f_12[2] f_12[3] f_12[4]

#variable etotal equal c_eu+c_ev+c_ew
variable metotal equal c_meu+c_mev+c_mew

fix                 load balance 1000 1.1 rcb time

#stats_style	    step cpu np nattempt ncoll nscoll
stats_style	    step cpu np nattempt ncoll nscoll v_metotal c_fsum[1] c_fsum[2] c_fsum[3] c_fsum[4]

stats		    100
run 		    0
collide_modify      vremax 1000000 no nearcp yes 100

unfix               13
unfix               fgrid1
fix                 fgrid1 ave/grid all 1 10000 10000 c_cgrid1[*] ave running
fix                 13 ave/surf all 1 10000 10000 c_12[*] ave running
run                 0
